{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutusComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/form.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","handleSubmit","bind","toggleModal","values","this","postComment","dishId","rating","author","comment","setState","modal","isOpen","toggle","onSubmit","onSubmitFailed","htmlFor","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","togglerNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","outline","innerRef","input","check","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","md","size","offset","checkbox","RenderLeader","left","middle","object","body","list","heading","Aboutus","leaders","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","resp","response_json","feedback","response_json_dis","confirmation","Dishes","action","Comments","concat","Promotions","errMessage","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b91e4a6d.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading...</p>\n        </div>\n    )\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\n\n    /* Function only return view. Two way to decalre functional component:\n    1. function RenderMenuItem (props){} : \n    2. Props is object. if you know whats will be passing then can pass like below*/\n    function RenderMenuItem ({dish, onClick}){\n        return (\n            <Card> \n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg width='100%' src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n    const Menu = (props) => {\n        const menu = props.dishes.dishes.map((dish)=>{\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish}/>\n                </div>\n            )\n        });\n\n        if (props.dishes.isLoading){\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            );\n                \n        }\n        else \n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active><Link to='/menu'>Menu </Link></BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}                   \n                    </div>\n                </div>\n            );\n    }\nexport default Menu;","import React, {Component} from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row, Col} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components'\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isModalOpen: this.props.isModalOpen\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n    \n    handleSubmit(values){\n        this.toggleModal();\n        // alert(JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n    render(){\n        let modal = this.state.isModalOpen;\n        return(\n            <div>\n                <div>\n                    <Button className=\"btn-outline-secondary\" onClick={this.toggleModal}>\n                        <span className=\"fa fa-pencil\"></span> Submit Comment\n                    </Button>  \n                </div>   \n                <div>       \n                    <Modal isOpen={modal} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>\n                                <div>Submit Comment </div>\n                            </ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)} onSubmitFailed={(values) => this.handleSubmit(values)}>\n                                    <Row className=\"form-group\">\n                                        <Col>\n                                            <Label htmlFor=\"rating\">Rating</Label>\n                                            <Control.select model=\".rating\" name=\"rating\" id=\"rating\" className=\"form-control\">\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Control.select>\n                                        </Col>\n                                    </Row>\n                                <Row className=\"form-group\">\n                                    <Col>\n                                        <Label htmlFor=\"author\">Your Name</Label>\n                                        <Control.text model=\".author\" name=\"author\" id=\"author\" \n                                            placeholder=\"Your Name\" className=\"form-control\"\n                                            validators = {{\n                                                required,\n                                                minLength : minLength(3),\n                                                maxLength : maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".author\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required : 'Required input',\n                                                minLength : \"Must be greatet then 2 characters\",\n                                                maxLength : \"Must be 15 characters or less\"\n                                            }}\n                                        />\n                                    </Col>                            \n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col>\n                                        <Label htmlFor=\"comment\" >Comment</Label>\n                                        <Control.textarea model=\".comment\" name=\"comment\" rows=\"6\" \n                                        className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\n                            </LocalForm>\n                        </ModalBody>\n                </Modal>\n            </div>\n        </div>\n        )\n    }\n}\n\n    function RenderDish({dish}){\n        return(\n            <div className=\"col-12 col-md-5 m-1\">\n                <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name}></CardImg>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n                </FadeTransform>\n            </div>\n        );\n    }\n\n    function RenderComments ({comments, postComment, dishId}){\n        if (comments == null){\n            return <div></div>\n        }   \n        else \n            return(\n                <div className='col-12 col-md-5 m-1'>\n                    <h4>Comments</h4>\n                    <ul className='list-unstyled'>\n                        <Stagger in>\n                            {comments.map((comment) => {\n                                return (\n                                    <Fade in>\n                                    <li key={comment.id}>\n                                        <p>{comment.comment}</p>\n                                        <p>{comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'} ).format(new Date(Date.parse(comment.date)))}</p>\n                                    </li>\n                                    </Fade>\n                                )\n                            })}\n                        </Stagger>\n                    </ul>\n                    <CommentForm dishId={dishId} postComment={postComment}/>\n                </div>\n            )\n        }\n\n\n    \n\n    const DishDetail = (props) => {\n        if (props.isLoading){\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props == null){\n            return (\n                <div></div>\n            )\n        }\n        else if (props.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n                \n        }\n        else if (props.dish !== null){\n            return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active><Link to='/menu'>{props.dish.name} </Link></BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                        <RenderDish dish={props.dish} />\n                        <RenderComments \n                            comments={props.comments}\n                            postComment={props.postComment}\n                            dishId={props.dish.id}\n                        />\n                </div>\n            </div>\n        )}\n    }\n\n\nexport { DishDetail, CommentForm };","import React, {Component} from 'react';\nimport {Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form,FormGroup, Input, Label} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isNavOpen : false,\n            isModalOpen : false\n        }\n        this.togglerNav = this.togglerNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n    togglerNav(){\n        this.setState({\n            isNavOpen : !this.state.isNavOpen,\n        });\n    }\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        })\n    }\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault(); \n    }\n    render(){\n        return (\n            <>\n                <Navbar dark expand='md'>\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.togglerNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> contactus\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. \n                                    Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer (props) {\n    return (\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport {FadeTransform} from 'react-animation-components';\n\nfunction RenderCard ({item, isLoading, errMess}){\n    if (isLoading){\n        return (\n            <Loading/>        \n        );\n    }\n    else if (errMess){\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        \n        if (!item){\n            return (<div></div>)\n        }\n\n        return(\n            <FadeTransform in\n                transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n}\n\n\nfunction Home(props) {\n  return(\n      <div className=\"container\">\n          <div className=\"row align-items-start\">\n              <div className=\"col-12 col-md m-1\">\n                  <RenderCard item={props.dish} \n                  isLoading={props.dishesLoading}\n                  errMess={props.dishesErrMess}\n                  />\n              </div>\n              <div className=\"col-12 col-md m-1\">\n                  <RenderCard item={props.promotion} \n                  isLoading={props.promosLoading}\n                  errMess={props.promosErrMess}\n                  />\n              </div>\n              <div className=\"col-12 col-md m-1\">\n                  <RenderCard item={props.leader} \n                  isLoading={props.leadersLoading}\n                  errMess={props.leadersErrMess}\n                  />\n              </div>\n          </div>\n      </div>\n  );\n}\n\nexport default Home;  ","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, Form, Errors} from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        // console.log('Current State is: ' + JSON.stringify(values));\n        // alert('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        \n    }\n\n    render() {\n        return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            \n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )};\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderLeader({leader}){\n    if (leader.isLoading){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (leader.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{leader.errMess}</h4>\n                </div>\n            </div>\n        );\n            \n    }\n    else { \n        \n        return(\n            \n            <div key={leader.id}>\n                <Media>\n                    \n                    <Media left middle> \n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body>\n                        <Media list>\n                            <Media heading>{leader.name}</Media>\n                            <p>{leader.designation}</p>\n                            <p>{leader.description}</p>\n                        </Media>\n                    </Media>\n                 \n                </Media>\n            </div>\n            \n        );\n    }\n    \n}\n\nfunction Aboutus(props) {\n    \n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n   \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                            <Fade in>\n                                {leaders}        \n                            </Fade>\n                        </Stagger>        \n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Aboutus;    ","// Action creators will fetch info from the server\nimport * as ActionTypes from './ActionTypes';\n// import {DISHES} from '../shared/dishes';\nimport {baseUrl} from '../shared/baseUrl'; \n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: {\n        feedback\n    }\n});\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message,\n    };\n    newFeedback.date = new Date().toISOString();   \n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(resp => resp.json())\n    .then(response_json => dispatch(addFeedback(response_json)))\n    .then(response_json_dis => {console.log(response_json_dis); \n        const confirmation = {\n            firstname: response_json_dis.payload.feedback.firstname,\n            lastname: response_json_dis.payload.feedback.lastname,\n            telnum: response_json_dis.payload.feedback.telnum,\n            email: response_json_dis.payload.feedback.email,\n            agree: response_json_dis.payload.feedback.agree,\n            contactType: response_json_dis.payload.feedback.contactType,\n            message: response_json_dis.payload.feedback.message,\n            id: response_json_dis.payload.feedback.id\n        }\n        alert(`Thank you for your feedback!\\n ${JSON.stringify(confirmation)}`)})\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+ error.message); });\n};\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        comment\n    }\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();   \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n","//Action types will support fetch information from the server\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\n\nimport Menu from './MenuComponent';\nimport { DishDetail } from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport Aboutus from './AboutusComponent';\n\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders,\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  \n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\n});\n\nclass Main extends Component{\n  componentDidMount(){\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n  \n  render(){\n    //   console.log(\"main state\", this.state)\n    const HomePage = () => {\n        return(\n            <Home \n                dish={this.props.dishes.dishes.filter((dish)=>dish.featured)[0]}\n                dishesLoading={this.props.dishes.isLoading}\n                dishesErrMess={this.props.dishes.errMess}\n                promotion={this.props.promotions.promotions.filter((promotion)=>promotion.featured)[0]}\n                dishesLoading={this.props.promotions.isLoading}\n                dishesErrMess={this.props.promotions.errMess}\n                leader={this.props.leaders.leaders.filter((leader)=>leader.featured)[0]}\n            />\n        );\n      }\n\n    const DishWithId = ({match}) =>{\n        return(\n          <DishDetail \n            dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}          \n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n            commentsErrMess={this.props.comments.errMess}\n            postComment={this.props.postComment}\n        />\n        );\n    }\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n              <Switch location={this.props.location}>\n                  <Route path='/home' component={HomePage} />\n                  <Route exact path='/aboutus' component={() => <Aboutus leaders={this.props.leaders} />} />\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                  <Route path='/menu/:dishId' component={DishWithId} />\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n                  <Redirect to=\"/home\" />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","// import {DISHES} from '../shared/dishes';\nimport * as ActionTypes from './ActionTypes';\n\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\n            \n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n                  \n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload }\n        \n        default: \n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        // comment.id = state.comments.length;\n        // comment.date = new Date().toISOString();\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMessage: 'null'.payload, promotions: action.payload}\n            \n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMessage: null, promotions: []}\n                  \n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMessage: action.payload, promotions: []}\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\n        case ActionTypes.LEADERS_LOADING: \n            return {...state, isLoading: true, errMess: null, leaders: []}\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload}\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n  \n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {createForms} from 'react-redux-form';\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Promotions} from './promotions';\nimport {Leaders} from './leaders';\nimport { InitialFeedback } from './form';\n\nexport const ConfigureStore = () =>{\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}